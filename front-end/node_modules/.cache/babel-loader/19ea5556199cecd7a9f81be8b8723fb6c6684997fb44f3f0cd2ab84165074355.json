{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\mercy\\\\fullstack-projects\\\\quiz-application\\\\front-end\\\\src\\\\components\\\\ListQuestions.js\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from \"react\";\nimport { getAllQuestions, deleteQuestion } from \"../api/api\";\nimport { Link } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function ListQuestions() {\n  _s();\n  const [questions, setQuestions] = useState([]);\n  useEffect(() => {\n    const ac = new AbortController();\n    async function listOfQuestions() {\n      try {\n        const data = await getAllQuestions(ac.signal);\n        setQuestions(data.questions);\n      } catch (error) {\n        if (error.name === \"AbortError\") {\n          ac.abort();\n        } else {\n          throw error;\n        }\n      }\n    }\n    listOfQuestions();\n    return () => {\n      ac.abort();\n    };\n  }, []);\n  const handleDelete = async questionId => {\n    const ac = new AbortController();\n    const confirmDelete = window.confirm(\"Once this question has been deleted, you cannot retrieve it again.\");\n    if (confirmDelete) {\n      try {\n        await deleteQuestion(questionId, ac.signal);\n      } catch (error) {\n        if (error.name === \"AbortError\") {\n          return ac.abort();\n        } else {\n          throw error;\n        }\n      }\n      window.location.reload();\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Questions\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"questionList-container\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n_s(ListQuestions, \"1ery3Y2F+nTWSbC27k3nmjCRtvo=\");\n_c = ListQuestions;\nvar _c;\n$RefreshReg$(_c, \"ListQuestions\");","map":{"version":3,"names":["useEffect","useState","getAllQuestions","deleteQuestion","Link","jsxDEV","_jsxDEV","Fragment","_Fragment","ListQuestions","_s","questions","setQuestions","ac","AbortController","listOfQuestions","data","signal","error","name","abort","handleDelete","questionId","confirmDelete","window","confirm","location","reload","children","fileName","_jsxFileName","lineNumber","columnNumber","className","_c","$RefreshReg$"],"sources":["C:/Users/mercy/fullstack-projects/quiz-application/front-end/src/components/ListQuestions.js"],"sourcesContent":["import { useEffect, useState } from \"react\";\r\nimport { getAllQuestions, deleteQuestion} from \"../api/api\";\r\nimport {Link} from \"react-router-dom\"\r\nexport default function ListQuestions() {\r\n  const [questions, setQuestions] = useState([]);\r\n  useEffect(() => {\r\n    const ac = new AbortController();\r\n    async function listOfQuestions() {\r\n      try {\r\n        const data = await getAllQuestions(ac.signal);\r\n        setQuestions(data.questions);\r\n      } catch (error) {\r\n        if (error.name === \"AbortError\") {\r\n          ac.abort();\r\n        } else {\r\n          throw error;\r\n        }\r\n      }\r\n    }\r\n    listOfQuestions();\r\n    return () => {\r\n      ac.abort();\r\n    };\r\n  }, []);\r\n\r\n\r\n\r\n  const handleDelete = async(questionId)=>{\r\n    const ac = new AbortController();\r\n    const confirmDelete = window.confirm(\"Once this question has been deleted, you cannot retrieve it again.\")\r\n    if(confirmDelete){\r\n      try{\r\n        await deleteQuestion(questionId, ac.signal);\r\n      }catch(error){\r\n        if(error.name === \"AbortError\"){\r\n          return ac.abort();\r\n        }else{\r\n          throw error\r\n        }\r\n      }\r\n      window.location.reload();\r\n    }\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <h2>Questions</h2>\r\n      <div className=\"questionList-container\">\r\n\r\n      </div>\r\n\r\n    </>\r\n  );\r\n}\r\n"],"mappings":";;AAAA,SAASA,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAC3C,SAASC,eAAe,EAAEC,cAAc,QAAO,YAAY;AAC3D,SAAQC,IAAI,QAAO,kBAAkB;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AACrC,eAAe,SAASC,aAAaA,CAAA,EAAG;EAAAC,EAAA;EACtC,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EAC9CD,SAAS,CAAC,MAAM;IACd,MAAMa,EAAE,GAAG,IAAIC,eAAe,CAAC,CAAC;IAChC,eAAeC,eAAeA,CAAA,EAAG;MAC/B,IAAI;QACF,MAAMC,IAAI,GAAG,MAAMd,eAAe,CAACW,EAAE,CAACI,MAAM,CAAC;QAC7CL,YAAY,CAACI,IAAI,CAACL,SAAS,CAAC;MAC9B,CAAC,CAAC,OAAOO,KAAK,EAAE;QACd,IAAIA,KAAK,CAACC,IAAI,KAAK,YAAY,EAAE;UAC/BN,EAAE,CAACO,KAAK,CAAC,CAAC;QACZ,CAAC,MAAM;UACL,MAAMF,KAAK;QACb;MACF;IACF;IACAH,eAAe,CAAC,CAAC;IACjB,OAAO,MAAM;MACXF,EAAE,CAACO,KAAK,CAAC,CAAC;IACZ,CAAC;EACH,CAAC,EAAE,EAAE,CAAC;EAIN,MAAMC,YAAY,GAAG,MAAMC,UAAU,IAAG;IACtC,MAAMT,EAAE,GAAG,IAAIC,eAAe,CAAC,CAAC;IAChC,MAAMS,aAAa,GAAGC,MAAM,CAACC,OAAO,CAAC,oEAAoE,CAAC;IAC1G,IAAGF,aAAa,EAAC;MACf,IAAG;QACD,MAAMpB,cAAc,CAACmB,UAAU,EAAET,EAAE,CAACI,MAAM,CAAC;MAC7C,CAAC,QAAMC,KAAK,EAAC;QACX,IAAGA,KAAK,CAACC,IAAI,KAAK,YAAY,EAAC;UAC7B,OAAON,EAAE,CAACO,KAAK,CAAC,CAAC;QACnB,CAAC,MAAI;UACH,MAAMF,KAAK;QACb;MACF;MACAM,MAAM,CAACE,QAAQ,CAACC,MAAM,CAAC,CAAC;IAC1B;EACF,CAAC;EAED,oBACErB,OAAA,CAAAE,SAAA;IAAAoB,QAAA,gBACEtB,OAAA;MAAAsB,QAAA,EAAI;IAAS;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAClB1B,OAAA;MAAK2B,SAAS,EAAC;IAAwB;MAAAJ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAElC,CAAC;EAAA,eAEN,CAAC;AAEP;AAACtB,EAAA,CAlDuBD,aAAa;AAAAyB,EAAA,GAAbzB,aAAa;AAAA,IAAAyB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}