{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useState, useEffect } from \"react\";\nimport { getAllQuestions, postQuizScore } from \"../api/api\";\nexport default function Quiz() {\n  _s();\n  const [quiz, setQuiz] = useState([]);\n  const [currentIndex, setCurrentIndex] = useState(0);\n  const [selectedAnswer, setSelectedAnswer] = useState(null);\n  const [score, setScore] = useState(0);\n  const [finalScore, setFinalScore] = useState(score);\n  useEffect(() => {\n    const ac = new AbortController();\n    async function listOfQuestions() {\n      try {\n        const data = await getAllQuestions(ac.signal);\n        console.log(\"this is data\", data);\n        setQuiz(data.questions ? data.questions : []);\n      } catch (error) {\n        if (error.name === \"AbortError\") {\n          ac.abort();\n        } else {\n          throw error;\n        }\n      }\n    }\n    listOfQuestions();\n    return () => {\n      ac.abort();\n    };\n  }, []);\n}\n_s(Quiz, \"ECIJgZuCa4K+Nz7RGZilqly15sY=\");\n_c = Quiz;\nvar _c;\n$RefreshReg$(_c, \"Quiz\");","map":{"version":3,"names":["useState","useEffect","getAllQuestions","postQuizScore","Quiz","_s","quiz","setQuiz","currentIndex","setCurrentIndex","selectedAnswer","setSelectedAnswer","score","setScore","finalScore","setFinalScore","ac","AbortController","listOfQuestions","data","signal","console","log","questions","error","name","abort","_c","$RefreshReg$"],"sources":["C:/Users/mercy/fullstack-projects/quiz-application/front-end/src/components/Quiz.js"],"sourcesContent":["import { useState, useEffect } from \"react\";\r\nimport { getAllQuestions, postQuizScore } from \"../api/api\";\r\nexport default function Quiz() {\r\n  const [quiz, setQuiz] = useState([]);\r\n  const [currentIndex, setCurrentIndex] = useState(0);\r\n  const [selectedAnswer, setSelectedAnswer] = useState(null);\r\n  const [score, setScore] = useState(0);\r\n  const[finalScore, setFinalScore] = useState(score);\r\n\r\n\r\n  useEffect(() => {\r\n    const ac = new AbortController();\r\n    async function listOfQuestions() {\r\n      try {\r\n        const data = await getAllQuestions(ac.signal);\r\n        console.log(\"this is data\", data)\r\n        setQuiz(data.questions ? data.questions : []);\r\n      } catch (error) {\r\n        if (error.name === \"AbortError\") {\r\n          ac.abort();\r\n        } else {\r\n          throw error;\r\n        }\r\n      }\r\n    }\r\n    listOfQuestions();\r\n    return ()=>{\r\n      ac.abort();\r\n    }\r\n  }, []);\r\n}"],"mappings":";AAAA,SAASA,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAC3C,SAASC,eAAe,EAAEC,aAAa,QAAQ,YAAY;AAC3D,eAAe,SAASC,IAAIA,CAAA,EAAG;EAAAC,EAAA;EAC7B,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EACpC,MAAM,CAACQ,YAAY,EAAEC,eAAe,CAAC,GAAGT,QAAQ,CAAC,CAAC,CAAC;EACnD,MAAM,CAACU,cAAc,EAAEC,iBAAiB,CAAC,GAAGX,QAAQ,CAAC,IAAI,CAAC;EAC1D,MAAM,CAACY,KAAK,EAAEC,QAAQ,CAAC,GAAGb,QAAQ,CAAC,CAAC,CAAC;EACrC,MAAK,CAACc,UAAU,EAAEC,aAAa,CAAC,GAAGf,QAAQ,CAACY,KAAK,CAAC;EAGlDX,SAAS,CAAC,MAAM;IACd,MAAMe,EAAE,GAAG,IAAIC,eAAe,CAAC,CAAC;IAChC,eAAeC,eAAeA,CAAA,EAAG;MAC/B,IAAI;QACF,MAAMC,IAAI,GAAG,MAAMjB,eAAe,CAACc,EAAE,CAACI,MAAM,CAAC;QAC7CC,OAAO,CAACC,GAAG,CAAC,cAAc,EAAEH,IAAI,CAAC;QACjCZ,OAAO,CAACY,IAAI,CAACI,SAAS,GAAGJ,IAAI,CAACI,SAAS,GAAG,EAAE,CAAC;MAC/C,CAAC,CAAC,OAAOC,KAAK,EAAE;QACd,IAAIA,KAAK,CAACC,IAAI,KAAK,YAAY,EAAE;UAC/BT,EAAE,CAACU,KAAK,CAAC,CAAC;QACZ,CAAC,MAAM;UACL,MAAMF,KAAK;QACb;MACF;IACF;IACAN,eAAe,CAAC,CAAC;IACjB,OAAO,MAAI;MACTF,EAAE,CAACU,KAAK,CAAC,CAAC;IACZ,CAAC;EACH,CAAC,EAAE,EAAE,CAAC;AACR;AAACrB,EAAA,CA5BuBD,IAAI;AAAAuB,EAAA,GAAJvB,IAAI;AAAA,IAAAuB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}