{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\mercy\\\\fullstack-projects\\\\quiz-application\\\\front-end\\\\src\\\\components\\\\ListQuestions.js\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from \"react\";\nimport { getAllQuestions, deleteQuestion } from \"../api/api\";\nimport { Link } from \"react-router-dom\";\nimport \"../styles/listQuestions.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function ListQuestions() {\n  _s();\n  const [questions, setQuestions] = useState([]);\n  useEffect(() => {\n    const ac = new AbortController();\n    async function listOfQuestions() {\n      try {\n        const data = await getAllQuestions(ac.signal);\n        setQuestions(data.questions);\n      } catch (error) {\n        if (error.name === \"AbortError\") {\n          ac.abort();\n        } else {\n          throw error;\n        }\n      }\n    }\n    listOfQuestions();\n    return () => {\n      ac.abort();\n    };\n  }, []);\n  const handleDelete = async questionId => {\n    const ac = new AbortController();\n    const confirmDelete = window.confirm(\"Once this question has been deleted, you cannot retrieve it again.\");\n    if (confirmDelete) {\n      try {\n        await deleteQuestion(questionId, ac.signal);\n      } catch (error) {\n        if (error.name === \"AbortError\") {\n          return ac.abort();\n        } else {\n          throw error;\n        }\n      }\n      window.location.reload();\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Questions\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"theList\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"questionList-container\",\n        children: /*#__PURE__*/_jsxDEV(\"ul\", {\n          children: Array.isArray(questions) && questions.length > 0 ? questions.map(question => /*#__PURE__*/_jsxDEV(\"li\", {\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"theQuestion\",\n              children: question.question\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 56,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"answers\",\n              children: question.answer_a\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 57,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"answers\",\n              children: question.answer_b\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 58,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"answers\",\n              children: question.answer_c\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 59,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"answers\",\n              children: question.answer_d\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 60,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"\",\n              children: /*#__PURE__*/_jsxDEV(Link, {\n                to: `/questions/${question.question_id}/edit`,\n                children: \"Edit\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 62,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 61,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => handleDelete(question.question_id),\n              children: \"Delete\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 66,\n              columnNumber: 19\n            }, this)]\n          }, question.question_id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 17\n          }, this)) : /*#__PURE__*/_jsxDEV(\"li\", {\n            children: \"No questions found.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n_s(ListQuestions, \"1ery3Y2F+nTWSbC27k3nmjCRtvo=\");\n_c = ListQuestions;\nvar _c;\n$RefreshReg$(_c, \"ListQuestions\");","map":{"version":3,"names":["useEffect","useState","getAllQuestions","deleteQuestion","Link","jsxDEV","_jsxDEV","Fragment","_Fragment","ListQuestions","_s","questions","setQuestions","ac","AbortController","listOfQuestions","data","signal","error","name","abort","handleDelete","questionId","confirmDelete","window","confirm","location","reload","children","fileName","_jsxFileName","lineNumber","columnNumber","className","Array","isArray","length","map","question","answer_a","answer_b","answer_c","answer_d","to","question_id","onClick","_c","$RefreshReg$"],"sources":["C:/Users/mercy/fullstack-projects/quiz-application/front-end/src/components/ListQuestions.js"],"sourcesContent":["import { useEffect, useState } from \"react\";\r\nimport { getAllQuestions, deleteQuestion } from \"../api/api\";\r\nimport { Link } from \"react-router-dom\";\r\nimport \"../styles/listQuestions.css\"\r\nexport default function ListQuestions() {\r\n  const [questions, setQuestions] = useState([]);\r\n  useEffect(() => {\r\n    const ac = new AbortController();\r\n    async function listOfQuestions() {\r\n      try {\r\n        const data = await getAllQuestions(ac.signal);\r\n        setQuestions(data.questions);\r\n      } catch (error) {\r\n        if (error.name === \"AbortError\") {\r\n          ac.abort();\r\n        } else {\r\n          throw error;\r\n        }\r\n      }\r\n    }\r\n    listOfQuestions();\r\n    return () => {\r\n      ac.abort();\r\n    };\r\n  }, []);\r\n\r\n  const handleDelete = async (questionId) => {\r\n    const ac = new AbortController();\r\n    const confirmDelete = window.confirm(\r\n      \"Once this question has been deleted, you cannot retrieve it again.\"\r\n    );\r\n    if (confirmDelete) {\r\n      try {\r\n        await deleteQuestion(questionId, ac.signal);\r\n      } catch (error) {\r\n        if (error.name === \"AbortError\") {\r\n          return ac.abort();\r\n        } else {\r\n          throw error;\r\n        }\r\n      }\r\n      window.location.reload();\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <h2>Questions</h2>\r\n      <div className=\"theList\">\r\n        <div className=\"questionList-container\">\r\n          <ul>\r\n            {Array.isArray(questions) && questions.length > 0 ? (\r\n              questions.map((question) => (\r\n                <li key={question.question_id}>\r\n                  {/* display everything except for the answer */}\r\n                  <div className=\"theQuestion\">{question.question}</div>\r\n                  <div className=\"answers\">{question.answer_a}</div>\r\n                  <div className=\"answers\">{question.answer_b}</div>\r\n                  <div className=\"answers\">{question.answer_c}</div>\r\n                  <div className=\"answers\">{question.answer_d}</div>\r\n                  <button className=\"\">\r\n                    <Link to={`/questions/${question.question_id}/edit`}>\r\n                      Edit\r\n                    </Link>\r\n                  </button>\r\n                  <button onClick={() => handleDelete(question.question_id)}>\r\n                    Delete\r\n                  </button>\r\n                </li>\r\n              ))\r\n            ) : (\r\n              <li>No questions found.</li>\r\n            )}\r\n          </ul>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}