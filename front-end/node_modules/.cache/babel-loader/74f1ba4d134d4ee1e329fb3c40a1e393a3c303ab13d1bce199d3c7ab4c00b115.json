{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\mercy\\\\fullstack-projects\\\\quiz-application\\\\front-end\\\\src\\\\components\\\\Quiz.js\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from \"react\";\nimport { getAllQuestions, postQuizScore } from \"../api/api\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function Quiz() {\n  _s();\n  const [quiz, setQuiz] = useState([]);\n  const [currentIndex, setCurrentIndex] = useState(0);\n  const [selectedAnswer, setSelectedAnswer] = useState(null);\n  const [count, setCount] = useState(0);\n  useEffect(() => {\n    const ac = new AbortController();\n    async function listOfQuestions() {\n      try {\n        const data = await getAllQuestions(ac.signal);\n        console.log(\"this is data\", data);\n        setQuiz(data.questions ? data.questions : []);\n      } catch (error) {\n        if (error.name === \"AbortError\") {\n          ac.abort();\n        } else {\n          throw error;\n        }\n      }\n    }\n    listOfQuestions();\n    return () => {\n      ac.abort();\n    };\n  }, []);\n  const handleAnswerChange = e => {\n    setSelectedAnswer(e.target.value);\n  };\n  const handleNextClick = () => {\n    console.log(\"selectedAnswer is:\", selectedAnswer);\n    console.log(\"quiz is:\", quiz);\n    console.log(\"currentIndex is:\", currentIndex);\n    if (selectedAnswer === quiz[currentIndex].correct) {\n      setCount(previousCount => previousCount + 1);\n      setCurrentIndex(currentIndex => currentIndex + 1);\n      setSelectedAnswer(null);\n    } else {\n      setCurrentIndex(currentIndex => currentIndex + 1);\n      setSelectedAnswer(null);\n    }\n  };\n  const handleFinalClick = () => {\n    if (selectedAnswer === quiz[currentIndex].correct) {\n      setCount(count => count + 1);\n      setCurrentIndex(currentIndex => currentIndex + 1);\n    }\n    const ac = new AbortController();\n    const saveFinalScore = async () => {\n      try {\n        const finalScore = Math.floor(count / currentIndex * 100);\n        await postQuizScore({\n          score: finalScore\n        }, ac.signal);\n      } catch (error) {\n        if (error.name === \"AbortError\") {\n          ac.abort();\n        } else {\n          throw error;\n        }\n      }\n    };\n    saveFinalScore();\n    return () => {\n      ac.abort();\n    };\n  };\n  if (quiz.length === 0) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 12\n    }, this);\n  }\n  const currentQuestion = quiz[currentIndex];\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: displayScore\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }, this), Math.floor(count / currentIndex) <= 100 && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"score\",\n      children: [\"Score: \", displayScore]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 9\n    }, this), currentQuestion && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"quiz-container\",\n      id: \"quiz\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"quiz-info\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: currentQuestion.question\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n          children: Object.entries(currentQuestion).map(_ref => {\n            let [key, value] = _ref;\n            if (key.includes(\"answer\")) {\n              return /*#__PURE__*/_jsxDEV(\"li\", {\n                children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"radio\",\n                  id: key,\n                  name: \"answer\",\n                  value: key,\n                  className: \"answer\",\n                  checked: selectedAnswer === key,\n                  onChange: handleAnswerChange\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 102,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                  htmlFor: key,\n                  id: `${key}-text`,\n                  children: value\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 111,\n                  columnNumber: 23\n                }, this)]\n              }, key, true, {\n                fileName: _jsxFileName,\n                lineNumber: 101,\n                columnNumber: 21\n              }, this);\n            }\n            return null;\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 11\n      }, this), currentIndex !== quiz.length - 1 ? /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleNextClick,\n        children: \"Next Question\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 13\n      }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        onClick: handleFinalClick,\n        children: \"Final Question\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n}\n_s(Quiz, \"zd+C0yhywthRRlpVI38mg/XXaUY=\");\n_c = Quiz;\nvar _c;\n$RefreshReg$(_c, \"Quiz\");","map":{"version":3,"names":["useState","useEffect","getAllQuestions","postQuizScore","jsxDEV","_jsxDEV","Fragment","_Fragment","Quiz","_s","quiz","setQuiz","currentIndex","setCurrentIndex","selectedAnswer","setSelectedAnswer","count","setCount","ac","AbortController","listOfQuestions","data","signal","console","log","questions","error","name","abort","handleAnswerChange","e","target","value","handleNextClick","correct","previousCount","handleFinalClick","saveFinalScore","finalScore","Math","floor","score","length","children","fileName","_jsxFileName","lineNumber","columnNumber","currentQuestion","displayScore","className","id","question","Object","entries","map","_ref","key","includes","type","checked","onChange","htmlFor","onClick","_c","$RefreshReg$"],"sources":["C:/Users/mercy/fullstack-projects/quiz-application/front-end/src/components/Quiz.js"],"sourcesContent":["import { useState, useEffect } from \"react\";\r\nimport { getAllQuestions, postQuizScore } from \"../api/api\";\r\nexport default function Quiz() {\r\n  const [quiz, setQuiz] = useState([]);\r\n  const [currentIndex, setCurrentIndex] = useState(0);\r\n  const [selectedAnswer, setSelectedAnswer] = useState(null);\r\n  const [count, setCount] = useState(0);\r\n\r\n\r\n  useEffect(() => {\r\n    const ac = new AbortController();\r\n    async function listOfQuestions() {\r\n      try {\r\n        const data = await getAllQuestions(ac.signal);\r\n        console.log(\"this is data\", data);\r\n        setQuiz(data.questions ? data.questions : []);\r\n      } catch (error) {\r\n        if (error.name === \"AbortError\") {\r\n          ac.abort();\r\n        } else {\r\n          throw error;\r\n        }\r\n      }\r\n    }\r\n    listOfQuestions();\r\n    return () => {\r\n      ac.abort();\r\n    };\r\n  }, []);\r\n\r\n  const handleAnswerChange = (e) => {\r\n    setSelectedAnswer(e.target.value);\r\n  };\r\n\r\n  const handleNextClick = () => {\r\n    console.log(\"selectedAnswer is:\", selectedAnswer);\r\n    console.log(\"quiz is:\", quiz);\r\n    console.log(\"currentIndex is:\", currentIndex);\r\n\r\n    if (selectedAnswer === quiz[currentIndex].correct) {\r\n      setCount((previousCount) => previousCount + 1);\r\n      setCurrentIndex((currentIndex) => currentIndex + 1);\r\n      setSelectedAnswer(null);\r\n    } else {\r\n      setCurrentIndex((currentIndex) => currentIndex + 1);\r\n      setSelectedAnswer(null);\r\n    }\r\n\r\n  };\r\n\r\n  const handleFinalClick = () => {\r\n    if (selectedAnswer === quiz[currentIndex].correct) {\r\n      setCount((count) => count + 1);\r\n      setCurrentIndex((currentIndex) => currentIndex + 1);\r\n    }\r\n\r\n\r\n    const ac = new AbortController();\r\n\r\n    const saveFinalScore = async () => {\r\n      try {\r\n        const finalScore = Math.floor((count / currentIndex) * 100);\r\n        await postQuizScore({ score: finalScore }, ac.signal);\r\n      } catch (error) {\r\n        if (error.name === \"AbortError\") {\r\n          ac.abort();\r\n        } else {\r\n          throw error;\r\n        }\r\n      }\r\n    };\r\n\r\n    saveFinalScore();\r\n\r\n    return () => {\r\n      ac.abort();\r\n    };\r\n  };\r\n\r\n  if (quiz.length === 0) {\r\n    return <div>Loading...</div>;\r\n  }\r\n\r\n  const currentQuestion = quiz[currentIndex];\r\n\r\n  return (\r\n    <>\r\n\r\n      <h1>{displayScore}</h1>\r\n      {Math.floor(count/(currentIndex)) <= 100 && (\r\n        <div className=\"score\">Score: {displayScore}</div>\r\n      )}\r\n      {currentQuestion && (\r\n        <div className=\"quiz-container\" id=\"quiz\">\r\n          <div className=\"quiz-info\">\r\n            <h2>{currentQuestion.question}</h2>\r\n            <ul>\r\n              {Object.entries(currentQuestion).map(([key, value]) => {\r\n                if (key.includes(\"answer\")) {\r\n                  return (\r\n                    <li key={key}>\r\n                      <input\r\n                        type=\"radio\"\r\n                        id={key}\r\n                        name=\"answer\"\r\n                        value={key}\r\n                        className=\"answer\"\r\n                        checked={selectedAnswer === key}\r\n                        onChange={handleAnswerChange}\r\n                      />\r\n                      <label htmlFor={key} id={`${key}-text`}>\r\n                        {value}\r\n                      </label>\r\n                    </li>\r\n                  );\r\n                }\r\n                return null;\r\n              })}\r\n            </ul>\r\n          </div>\r\n          {currentIndex !== quiz.length - 1 ? (\r\n            <button onClick={handleNextClick}>Next Question</button>\r\n          ) : (\r\n            <button type=\"submit\" onClick={handleFinalClick}>\r\n              Final Question\r\n            </button>\r\n          )}\r\n        </div>\r\n      )}\r\n    </>\r\n  );\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}