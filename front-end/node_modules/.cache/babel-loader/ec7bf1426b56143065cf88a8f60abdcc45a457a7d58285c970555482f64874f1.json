{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\mercy\\\\fullstack-projects\\\\quiz-application\\\\front-end\\\\src\\\\components\\\\Quiz.js\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from \"react\";\nimport { getAllQuestions, postQuizScore } from \"../api/api\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function Quiz() {\n  _s();\n  const [quiz, setQuiz] = useState([]);\n  const [currentIndex, setCurrentIndex] = useState(0);\n  const [selectedAnswer, setSelectedAnswer] = useState(null);\n  const [score, setScore] = useState(0);\n  const [finalScore, setFinalScore] = useState(score);\n  useEffect(() => {\n    const ac = new AbortController();\n    async function listOfQuestions() {\n      try {\n        const data = await getAllQuestions(ac.signal);\n        console.log(\"this is data\", data);\n        setQuiz(data.questions ? data.questions : []);\n      } catch (error) {\n        if (error.name === \"AbortError\") {\n          ac.abort();\n        } else {\n          throw error;\n        }\n      }\n    }\n    listOfQuestions();\n    return () => {\n      ac.abort();\n    };\n  }, []);\n  useEffect(() => {\n    console.log(\"this is final score before setting\", finalScore);\n    setFinalScore(Math.floor(score / quiz.length * 100));\n  }, [score, quiz.length]);\n  const handleAnswerChange = e => {\n    setSelectedAnswer(e.target.value);\n  };\n  const handleNextClick = () => {\n    console.log(\"selectedAnswer is:\", selectedAnswer);\n    console.log(\"quiz is:\", quiz);\n    console.log(\"currentIndex is:\", currentIndex);\n    if (selectedAnswer === quiz[currentIndex].correct) {\n      setScore(prevScore => prevScore + 1);\n    }\n    setCurrentIndex(currentIndex => currentIndex + 1);\n    console.log(\"this is the current score\", score);\n    console.log(\"this is the current index after setting the index\", currentIndex);\n    setSelectedAnswer(null);\n  };\n  const handleFinalClick = () => {\n    if (selectedAnswer === quiz[currentIndex].correct) {\n      setScore(score => score + 1);\n    }\n    const ac = new AbortController();\n    const saveFinalScore = async () => {\n      try {\n        await postQuizScore({\n          score: finalScore\n        }, ac.signal);\n      } catch (error) {\n        if (error.name === \"AbortError\") {\n          ac.abort();\n        } else {\n          throw error;\n        }\n      }\n    };\n    saveFinalScore();\n    return () => {\n      ac.abort();\n    };\n  };\n  if (quiz.length === 0) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 12\n    }, this);\n  }\n  const currentQuestion = quiz[currentIndex];\n  let displayScore = Math.floor(score / currentIndex * 100);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: displayScore\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 7\n    }, this), displayScore <= 100 && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"score\",\n      children: [\"Score: \", displayScore]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 8\n    }, this), currentQuestion && /*#__PURE__*/_jsxDEV(\"form\", {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"quiz-container\",\n        id: \"quiz\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"quiz-info\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: currentQuestion.question\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n            children: Object.entries(currentQuestion).map(_ref => {\n              let [key, value] = _ref;\n              if (key.includes(\"answer\")) {\n                return /*#__PURE__*/_jsxDEV(\"li\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                    type: \"radio\",\n                    id: key,\n                    name: \"answer\",\n                    value: key,\n                    className: \"answer\",\n                    checked: selectedAnswer === key,\n                    onChange: handleAnswerChange\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 108,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                    htmlFor: key,\n                    id: `${key}-text`,\n                    children: value\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 117,\n                    columnNumber: 25\n                  }, this)]\n                }, key, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 107,\n                  columnNumber: 21\n                }, this);\n              }\n              return null;\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 11\n        }, this), currentIndex !== quiz.length - 1 ? /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleNextClick,\n          children: \"Next Question\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          on: true,\n          children: \"Final Question\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n}\n_s(Quiz, \"nP6lIPXn+2s3XJIdPr9HFzXfJ1I=\");\n_c = Quiz;\nvar _c;\n$RefreshReg$(_c, \"Quiz\");","map":{"version":3,"names":["useState","useEffect","getAllQuestions","postQuizScore","jsxDEV","_jsxDEV","Fragment","_Fragment","Quiz","_s","quiz","setQuiz","currentIndex","setCurrentIndex","selectedAnswer","setSelectedAnswer","score","setScore","finalScore","setFinalScore","ac","AbortController","listOfQuestions","data","signal","console","log","questions","error","name","abort","Math","floor","length","handleAnswerChange","e","target","value","handleNextClick","correct","prevScore","handleFinalClick","saveFinalScore","children","fileName","_jsxFileName","lineNumber","columnNumber","currentQuestion","displayScore","className","id","question","Object","entries","map","_ref","key","includes","type","checked","onChange","htmlFor","onClick","on","_c","$RefreshReg$"],"sources":["C:/Users/mercy/fullstack-projects/quiz-application/front-end/src/components/Quiz.js"],"sourcesContent":["import { useState, useEffect } from \"react\";\r\nimport { getAllQuestions, postQuizScore } from \"../api/api\";\r\nexport default function Quiz() {\r\n  const [quiz, setQuiz] = useState([]);\r\n  const [currentIndex, setCurrentIndex] = useState(0);\r\n  const [selectedAnswer, setSelectedAnswer] = useState(null);\r\n  const [score, setScore] = useState(0);\r\n  const [finalScore, setFinalScore] = useState(score);\r\n\r\n  useEffect(() => {\r\n    const ac = new AbortController();\r\n    async function listOfQuestions() {\r\n      try {\r\n        const data = await getAllQuestions(ac.signal);\r\n        console.log(\"this is data\", data)\r\n        setQuiz(data.questions ? data.questions : []);\r\n      } catch (error) {\r\n        if (error.name === \"AbortError\") {\r\n          ac.abort();\r\n        } else {\r\n          throw error;\r\n        }\r\n      }\r\n    }\r\n    listOfQuestions();\r\n    return ()=>{\r\n      ac.abort();\r\n    }\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    console.log(\"this is final score before setting\", finalScore)\r\n    setFinalScore(Math.floor((score / quiz.length) * 100));\r\n\r\n  }, [score, quiz.length]);\r\n\r\n  const handleAnswerChange = (e) => {\r\n    setSelectedAnswer(e.target.value);\r\n  };\r\n\r\n  const handleNextClick = () => {\r\n    console.log(\"selectedAnswer is:\", selectedAnswer);\r\n    console.log(\"quiz is:\", quiz);\r\n    console.log(\"currentIndex is:\", currentIndex);\r\n\r\n    if (selectedAnswer === quiz[currentIndex].correct) {\r\n      setScore((prevScore) => prevScore + 1);\r\n    }\r\n\r\n    setCurrentIndex((currentIndex) => currentIndex + 1);\r\n    console.log(\"this is the current score\", score)\r\n    console.log(\"this is the current index after setting the index\", currentIndex)\r\n    setSelectedAnswer(null);\r\n  };\r\n\r\n  const handleFinalClick = () => {\r\n    if (selectedAnswer === quiz[currentIndex].correct) {\r\n      setScore((score) => score + 1);\r\n\r\n    }\r\n\r\n    const ac = new AbortController();\r\n\r\n    const saveFinalScore = async () => {\r\n      try {\r\n        await postQuizScore({score:finalScore}, ac.signal);\r\n      } catch (error) {\r\n        if (error.name === \"AbortError\") {\r\n          ac.abort();\r\n        } else {\r\n          throw error;\r\n        }\r\n      }\r\n    };\r\n\r\n    saveFinalScore();\r\n\r\n    return () => {\r\n      ac.abort();\r\n    };\r\n\r\n  };\r\n\r\n  if (quiz.length === 0) {\r\n    return <div>Loading...</div>;\r\n  }\r\n\r\n  const currentQuestion = quiz[currentIndex];\r\n  let displayScore = Math.floor((score/(currentIndex))*100)\r\n  return(\r\n    <>\r\n      <h1>{displayScore}</h1>\r\n      {displayScore <= 100 &&\r\n      (<div className=\"score\">\r\n        Score: {displayScore}\r\n      </div>)\r\n      }\r\n      {currentQuestion && (\r\n        <form>\r\n        <div className=\"quiz-container\" id=\"quiz\">\r\n          <div className=\"quiz-info\">\r\n            <h2>{currentQuestion.question}</h2>\r\n            <ul>\r\n              {Object.entries(currentQuestion).map(([key, value]) => {\r\n                if(key.includes(\"answer\")){\r\n                  return (\r\n                    <li key={key}>\r\n                      <input\r\n                        type=\"radio\"\r\n                        id={key}\r\n                        name=\"answer\"\r\n                        value={key}\r\n                        className=\"answer\"\r\n                        checked={selectedAnswer === key}\r\n                        onChange={handleAnswerChange}\r\n                        />\r\n                        <label htmlFor={key} id={`${key}-text`}>\r\n                          {value}\r\n                        </label>\r\n                    </li>\r\n                  )\r\n                }\r\n                return null;\r\n              })}\r\n            </ul>\r\n          </div>\r\n          {currentIndex !== quiz.length - 1 ? (\r\n            <button onClick={handleNextClick}>Next Question</button>\r\n          ) : (\r\n            <button type=\"submit\" on>\r\n              Final Question\r\n            </button>\r\n          )}\r\n        </div>\r\n        </form>\r\n      )}\r\n    </>\r\n  )\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}