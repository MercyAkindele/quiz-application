{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\mercy\\\\fullstack-projects\\\\quiz-application\\\\front-end\\\\src\\\\components\\\\ListQuestions.js\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from \"react\";\nimport { getAllQuestions } from \"../api/api\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function ListQuestions() {\n  _s();\n  const [questions, setQuestions] = useState([]);\n  useEffect(() => {\n    const ac = new AbortController();\n    async function listOfQuestions() {\n      try {\n        const data = await getAllQuestions(ac.signal);\n        console.log(\"this is data\", data);\n        setQuestions(data.questions);\n        console.log(\"this is questions\", questions);\n      } catch (error) {\n        if (error.name === \"AbortError\") {\n          ac.abort();\n        } else {\n          throw error;\n        }\n      }\n    }\n    listOfQuestions();\n    return () => {\n      ac.abort();\n    };\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Questions\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: [Array.isArray(questions) && questions, questions.map(question => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: question.question\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: question.answer_a\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: question.answer_b\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: question.answer_c\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: question.answer_d\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 13\n        }, this)]\n      }, question.question_id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 11\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n_s(ListQuestions, \"1ery3Y2F+nTWSbC27k3nmjCRtvo=\");\n_c = ListQuestions;\nvar _c;\n$RefreshReg$(_c, \"ListQuestions\");","map":{"version":3,"names":["useEffect","useState","getAllQuestions","jsxDEV","_jsxDEV","Fragment","_Fragment","ListQuestions","_s","questions","setQuestions","ac","AbortController","listOfQuestions","data","signal","console","log","error","name","abort","children","fileName","_jsxFileName","lineNumber","columnNumber","Array","isArray","map","question","answer_a","answer_b","answer_c","answer_d","question_id","_c","$RefreshReg$"],"sources":["C:/Users/mercy/fullstack-projects/quiz-application/front-end/src/components/ListQuestions.js"],"sourcesContent":["import { useEffect, useState } from \"react\";\r\nimport { getAllQuestions } from \"../api/api\";\r\nexport default function ListQuestions() {\r\n  const [questions, setQuestions] = useState([]);\r\n  useEffect(() => {\r\n    const ac = new AbortController();\r\n    async function listOfQuestions() {\r\n      try {\r\n        const data = await getAllQuestions(ac.signal);\r\n        console.log(\"this is data\", data)\r\n        setQuestions(data.questions);\r\n        console.log(\"this is questions\",questions)\r\n      } catch (error) {\r\n        if (error.name === \"AbortError\") {\r\n          ac.abort();\r\n        } else {\r\n          throw error;\r\n        }\r\n      }\r\n    }\r\n    listOfQuestions();\r\n    return () => {\r\n      ac.abort();\r\n    };\r\n  }, []);\r\n  return (\r\n    <>\r\n      <h2>Questions</h2>\r\n      <ul>\r\n        {Array.isArray(questions) && questions}\r\n        {questions.map((question) => (\r\n          <li key={question.question_id}>\r\n            {/* display everything except for the answer*/}\r\n            <div>{question.question}</div>\r\n            <div>{question.answer_a}</div>\r\n            <div>{question.answer_b}</div>\r\n            <div>{question.answer_c}</div>\r\n            <div>{question.answer_d}</div>\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    </>\r\n  );\r\n}\r\n"],"mappings":";;AAAA,SAASA,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAC3C,SAASC,eAAe,QAAQ,YAAY;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAC7C,eAAe,SAASC,aAAaA,CAAA,EAAG;EAAAC,EAAA;EACtC,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EAC9CD,SAAS,CAAC,MAAM;IACd,MAAMW,EAAE,GAAG,IAAIC,eAAe,CAAC,CAAC;IAChC,eAAeC,eAAeA,CAAA,EAAG;MAC/B,IAAI;QACF,MAAMC,IAAI,GAAG,MAAMZ,eAAe,CAACS,EAAE,CAACI,MAAM,CAAC;QAC7CC,OAAO,CAACC,GAAG,CAAC,cAAc,EAAEH,IAAI,CAAC;QACjCJ,YAAY,CAACI,IAAI,CAACL,SAAS,CAAC;QAC5BO,OAAO,CAACC,GAAG,CAAC,mBAAmB,EAACR,SAAS,CAAC;MAC5C,CAAC,CAAC,OAAOS,KAAK,EAAE;QACd,IAAIA,KAAK,CAACC,IAAI,KAAK,YAAY,EAAE;UAC/BR,EAAE,CAACS,KAAK,CAAC,CAAC;QACZ,CAAC,MAAM;UACL,MAAMF,KAAK;QACb;MACF;IACF;IACAL,eAAe,CAAC,CAAC;IACjB,OAAO,MAAM;MACXF,EAAE,CAACS,KAAK,CAAC,CAAC;IACZ,CAAC;EACH,CAAC,EAAE,EAAE,CAAC;EACN,oBACEhB,OAAA,CAAAE,SAAA;IAAAe,QAAA,gBACEjB,OAAA;MAAAiB,QAAA,EAAI;IAAS;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAClBrB,OAAA;MAAAiB,QAAA,GACGK,KAAK,CAACC,OAAO,CAAClB,SAAS,CAAC,IAAIA,SAAS,EACrCA,SAAS,CAACmB,GAAG,CAAEC,QAAQ,iBACtBzB,OAAA;QAAAiB,QAAA,gBAEEjB,OAAA;UAAAiB,QAAA,EAAMQ,QAAQ,CAACA;QAAQ;UAAAP,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAM,CAAC,eAC9BrB,OAAA;UAAAiB,QAAA,EAAMQ,QAAQ,CAACC;QAAQ;UAAAR,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAM,CAAC,eAC9BrB,OAAA;UAAAiB,QAAA,EAAMQ,QAAQ,CAACE;QAAQ;UAAAT,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAM,CAAC,eAC9BrB,OAAA;UAAAiB,QAAA,EAAMQ,QAAQ,CAACG;QAAQ;UAAAV,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAM,CAAC,eAC9BrB,OAAA;UAAAiB,QAAA,EAAMQ,QAAQ,CAACI;QAAQ;UAAAX,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAM,CAAC;MAAA,GANvBI,QAAQ,CAACK,WAAW;QAAAZ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAOzB,CACL,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACA,CAAC;EAAA,eACL,CAAC;AAEP;AAACjB,EAAA,CAzCuBD,aAAa;AAAA4B,EAAA,GAAb5B,aAAa;AAAA,IAAA4B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}